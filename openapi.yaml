openapi: 3.0.1
info:
  title: ITMO Lab4 API
  version: 1.4.0
servers:
- url: http://weblab4.bardinpetr.ru
security:
- bearerAuth: []
paths:
  /api/point:
    get:
      tags:
      - point-controller
      summary: Get point check results of current user
      operationId: findOwn
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PointResultDTO'
    post:
      tags:
      - point-controller
      summary: Check if specified point in polygon scaled by r parameter
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PointResultDTO'
    delete:
      tags:
      - point-controller
      summary: Remove all user-owned results
      operationId: removeAll
      responses:
        "200":
          description: OK
  /api/point/{id}:
    get:
      tags:
      - point-controller
      summary: Get point result by id
      operationId: find
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PointResultDTO'
    delete:
      tags:
      - point-controller
      summary: Remove user-owned result by id
      operationId: remove
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/point/all:
    get:
      tags:
      - point-controller
      summary: Get all point check results
      operationId: findAll
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PointResultDTO'
  /api/constraints/{type}:
    get:
      tags:
      - constraints-controller
      summary: Get input variables range constraints
      operationId: getConstraint
      parameters:
      - name: type
        in: path
        description: "Name of requested parameter range: point X/Y or area scale R"
        required: true
        schema:
          type: string
          enum:
          - x
          - "y"
          - r
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DoubleRange'
  /api/area:
    get:
      tags:
      - area-controller
      summary: Get checked polygon geometry description
      operationId: area
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/AreaCircle'
                - $ref: '#/components/schemas/AreaPolygon'
                - $ref: '#/components/schemas/GenericArea'
components:
  schemas:
    AreaConfig:
      required:
      - r
      type: object
      properties:
        r:
          type: number
          format: double
    Point:
      required:
      - x
      - "y"
      type: object
      properties:
        x:
          type: number
          format: double
        "y":
          type: number
          format: double
    PointRequestDTO:
      required:
      - area
      - point
      type: object
      properties:
        point:
          $ref: '#/components/schemas/Point'
        area:
          $ref: '#/components/schemas/AreaConfig'
    PointResultDTO:
      required:
      - areaR
      - executionTimeNs
      - id
      - inside
      - owner
      - pointX
      - pointY
      - timestamp
      type: object
      properties:
        id:
          type: integer
          format: int64
        owner:
          type: string
        areaR:
          type: number
          format: double
        pointX:
          type: number
          format: double
        pointY:
          type: number
          format: double
        inside:
          type: boolean
        executionTimeNs:
          type: integer
          format: int64
        timestamp:
          type: integer
          format: int64
    DoubleRange:
      required:
      - max
      - maxInclusive
      - min
      - minInclusive
      type: object
      properties:
        min:
          type: number
          format: double
        minInclusive:
          type: boolean
        max:
          type: number
          format: double
        maxInclusive:
          type: boolean
    Area:
      title: Area
      required:
      - type
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          GenericArea: '#/components/schemas/GenericArea'
          AreaPolygon: '#/components/schemas/AreaPolygon'
          AreaCircle: '#/components/schemas/AreaCircle'
    AreaCircle:
      required:
      - angleEndRadians
      - angleStartRadians
      - center
      - radius
      type: object
      allOf:
      - $ref: '#/components/schemas/Area'
      - type: object
        properties:
          center:
            $ref: '#/components/schemas/Point'
          radius:
            type: number
            format: double
          angleStartRadians:
            type: number
            format: double
          angleEndRadians:
            type: number
            format: double
    AreaPolygon:
      required:
      - points
      type: object
      allOf:
      - $ref: '#/components/schemas/Area'
      - type: object
        properties:
          points:
            type: array
            items:
              $ref: '#/components/schemas/Point'
    GenericArea:
      required:
      - subareas
      type: object
      allOf:
      - $ref: '#/components/schemas/Area'
      - type: object
        properties:
          subareas:
            type: array
            items:
              $ref: '#/components/schemas/Area'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
